// Copyright 2018 Sean Robertson

#pragma once

#ifndef TEST_MCORR1D_BUFFERS_H_
#define TEST_MCORR1D_BUFFERS_H_

namespace mcorr1db {

const int kNumTests = 15;

const double kF[][100] = {
  { -5., -3./8. },  // 0: 2f 10g
  { -5./4., -10./3., 1., -4./3. },  // 1: 4f 10g
  { -5., 9./10., -1./4. },  // 2: 3f 6g
  { 3./2., -1., -2./9., -5./7., 2./3. },  // 3: 5f 5g
  {
    1./9., -1./5., -1./6., 4., -2./5.,
    3./4.
  },  // 4: 6f 3g
  { -3./4., -1., },  // 5: 2f 1g
  { -2./7. },  // 6: 1f 1g
  { 1., 2., 3., 4. },  // 7: 4f 5g (p=3)
  { -1., -2., 1., -2., -1. },  // 8: 5f 6g (s=2)
  { 1./2., 1./3., 1./4. },  // 9: 3f 8g (d=2)
  { 3., -1., 4., -2. },  // 10: 4f 6g (s=3,d=2,p=1)
  { 4., 8., 2., 1. },  // 11: 4f 4g (u=2)
  { 2., 1., -3. },  // 12: 3f 4g (s=2,d=3,p=3,u=5)
  { 1. },  // 13: 1f 10g (d=5, p=1)
  { 1., 2. },  // 14: 2f 2g (d=3,p=3)
};

const double kG[][100] = {
  {
    5./7., 2./9.,  -2./7., 1.,  2./9.,
    8./7., -1./7., -7.,    1., 8./5.
  },  // 0: 2f 10g
  {
    -1./2., 1./2., 1./6., 4./3., -7./3.,
    -5./3., 1.,    5./2., 9./7., -3.
  },  // 1: 4f 10g
  {
    0.,    5., -7./9., -5./6., 4.,
    -3./5.
  },  // 2: 3f 6g
  { 7., 1./9., -7./10., 8., 2. },  // 3: 5f 5g
  { -1./3., 10./9., -1. },  // 4: 6f 3g
  { 6. },  // 5: 2f 1g
  { -2./3. },  // 6: 1f 1g
  { 3., 2., 1., 2., 3. },  // 7: 4f 5g (p=3)
  {
    2., 4., 3., 2., 7.,
    -5.
  },  // 8: 5f 6g (s=2)
  {
    2.,  3., 4., -4., -3.,
    -2., 1., -1.
  },  // 9: 3f 8g (d=2)
  {
    4., 2., 0., 2., 3.,
    4.
  },  // 10: 4f 6g (s=3,d=2,p=1)
  { 5., 9., 3., 2. },  // 11: 4f 4g (u=2)
  { 3., 4., 3., 4. },  // 12: 3f 4g (s=2,d=3,p=3,u=5)
  { 1., 2., 3., 4., 5., 6., 7., 8., 9., 10. },  // 13: 1f 10g (d=5,p=1)
  { 3., 4. },  // 14: 2f 2g (d=3,p=3)
};

const int kNF[] = {
  2, 4, 3, 5, 6, 2, 1, 4, 5, 3, 4, 4, 3, 1, 2
};

const int kNG[] = {
  10, 10, 6, 5, 3, 1, 1, 5, 6, 8, 6, 4, 4, 10, 2
};

const int kCIn[] = {
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
};

const int kCOut[] = {
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
};

const int kS[] = {
  1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 2, 1, 1
};

const int kD[] = {
  1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 3, 5, 3
};

const int kP[] = {
  0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 3, 1, 3
};

const int kU[] = {
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 1, 1
};

const double kH[][100] = {
  {
    -921./252., -107./72., 1.,  -19./8., -77./45.,
    -40./7.,    5./7.,     35., -5.,     -8.
  },  // 0: 2f 10g
  {
    -191./72., -725./72., 3343./504., -10.,     155./12.,
    25./12.,   -5./4.,    -25./8.,    -45./28., 15./4.
  },  // 1: 4f 10g
  {
    169./36., -128./5., 1507./450., 25./6., -20.,
    3.
  },  // 2: 3f 6g
  { 3883./630., -47./6., -21./20., 12., 3. },  // 3: 5f 5g
  { -5./54., 10./81., -1./9. },  // 4: 6f 3g
  { -9./2. },  // 5: 2f 1g
  { 4./21. },   // 6: 1f 1g
  {
    12., 14., 4., 18., 12.,
    2.,  0.,  6., 0.,  6.,
    0.,  1.,  0., 0.,  0.,
    2.,  0.,  0., 0.,  3.
  },  // 7: 4f 5g (p=3)
  { -13., 7., -2., -7., 5. },  // 8: 5f 6g (s=2)
  { 11./6., -35./12., -1., -1./2. },  // 9: 3f 8g (d=2)
  { 16., 2., 9., 12. },  // 10: 4f 6g (s=3,d=2,p=1)
  { 61., 44., 36., 12., 8. },  // 11: 4f 4g (u=2)
  {
    0., 0.,  -9., 3., 4.,
    3., 12., 0.,  0.
  },  // 12: 4f 4g (s=2,d=3,p=3,u=5)
  { 0., 5., 0., 10. },  // 13: 1f 10g (d=5,p=2)
  { 6., 8. },  // 14: 2f 2g (d=3,p=3)
};

}  // namespace mcorr1db

#endif  // TEST_MCORR1D_BUFFERS_H_
