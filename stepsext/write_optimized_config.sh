#! /usr/bin/env bash

function check_variables_are_set() {
  while [ $# -gt 0 ]; do
    if [[ ! -v "$1" ]]; then
      return 1
    fi
    shift
  done
}

function unset_variables() {
  while [ $# -gt 0 ]; do
    unset $1
    shift
  done
}

[ -f path.sh ] && . path.sh

echo "$0 $*"

help_message="Write optimized config (INI) file from optimization

Usage: $0 [options] (<trial-dir> | <matrix-file> <line>)
e.g.: $0 exp/matrix 1

This script wraps 'print-parameters-as-ini' to write optimized hyperparameters
to file, for easy use with an experiment matrix generated by
stepsext/generate_matrix.sh and optimized with
stepsext/optimize_acoustic_model.sh. It loads up the best trial of the
optimization and clobbers the values in the model config with the optimized
values. Note that this will have already occurred if
stepsext/optimize_acoustic_model.sh had already successfully finished, but
will not if, for example, the optimization was interrupted (or never halts).

Where <trial-dir> is a directory generated by stepsext/generate_matrix.sh and
contains a file called 'variables'.

Alternatively, <matrix-file> is the matrix file generated by
stepsext/generate_matrix.sh and <line> is a natural number that indexes
a line in <matrix-file> that lists <trial-dir>.
"

. parse_options.sh

set -e

if [ $# = 1 ]; then
  trial_dir="$1"
else
  trial_dir="$(sed "${2}q;d" "$1")"
fi

if [ ! -f "${trial_dir}/variables" ]; then
  echo "No file '${trial_dir}/variables'" 1>&2
  exit 1
fi

trial_dir_vars=(
  "freq_dim"
  "target_dim"
  "HCLG"
  "gmm_mdl"
  "log_prior"
  "train_data"
  "dev_data"
  "test_data"
  "dev_ref"
  "test_ref"
  "model_cfg"
  "state_dir"
  "state_csv"
  "decode_dev"
  "decode_test"
  "decoding_states"
  "min_active"
  "max_active"
  "max_mem"
  "beam"
  "lattice_beam"
)
optim_variables=(
  "optim_out_config"
  "optim_history_url"
  "optim_partitions"
  "optim_use_val_partition"
  "optim_data_set"
  "optim_agent"
)
unset_variables "${trial_dir_vars[@]}" "${optim_variables[@]}" "weight_file"
. "${trial_dir}/variables"
check_variables_are_set "${trial_dir_vars[@]}"
if ! check_variables_are_set "${optim_variables[@]}" ; then
  echo "\
Unable to find optimization variables (such as ${optim_variables[0]}) in
'${trial_dir}/variables'. This likely means you called
stepsext/generate_matrix.sh without first having installed optuna.
Try 'pip install optuna'" 1>&2
  exit 1
fi

print-parameters-as-ini \
  --history-url "${optim_history_url}" \
  "${model_cfg}" > "${optim_out_config}"

echo "Optimized configuration stored at '${optim_out_config}'"
